// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Enmanuel_Gomez_P2_AP1.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250311045613_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EnmanuelGomez_AP1_P2.Models.Ciudades", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiudadId"));

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CiudadId");

                    b.ToTable("Ciudades");

                    b.HasData(
                        new
                        {
                            CiudadId = 1,
                            Monto = 150000.0,
                            Nombre = "San Francisco de Macoris"
                        },
                        new
                        {
                            CiudadId = 2,
                            Monto = 70000.0,
                            Nombre = "Salcedo"
                        },
                        new
                        {
                            CiudadId = 3,
                            Monto = 40500.0,
                            Nombre = "Tenares"
                        });
                });

            modelBuilder.Entity("EnmanuelGomez_AP1_P2.Models.EncuestaDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<int?>("EncuestasEncuestaId")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("DetalleId");

                    b.HasIndex("CiudadId");

                    b.HasIndex("EncuestasEncuestaId");

                    b.ToTable("EncuestaDetalle");
                });

            modelBuilder.Entity("EnmanuelGomez_AP1_P2.Models.Encuestas", b =>
                {
                    b.Property<int>("EncuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EncuestaId"));

                    b.Property<string>("Asignatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("EncuestaId");

                    b.ToTable("Encuestas");
                });

            modelBuilder.Entity("EnmanuelGomez_AP1_P2.Models.EncuestaDetalle", b =>
                {
                    b.HasOne("EnmanuelGomez_AP1_P2.Models.Ciudades", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnmanuelGomez_AP1_P2.Models.Encuestas", null)
                        .WithMany("Detalle")
                        .HasForeignKey("EncuestasEncuestaId");

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("EnmanuelGomez_AP1_P2.Models.Encuestas", b =>
                {
                    b.Navigation("Detalle");
                });
#pragma warning restore 612, 618
        }
    }
}
